#version 460 core

// total size (x*y*z) should be a multiple of 32 (Nvidia) or 64 (AMD)
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D screen;

layout(std430, binding = 3) buffer TrailMapBuffer {
    float trailMap[];  // This is a 1D array representing the 2D matrix
};

uint getIndex(int x, int y) {
    return y * imageSize(screen).x + x;
}

void main()
{
    
	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);	
	ivec2 dims = imageSize(screen);

    uint trailMapIndex = getIndex(pixelCoords.x, pixelCoords.y);

    float trail = trailMap[trailMapIndex];
    if (trail > 0.0f){
        trailMap[trailMapIndex] = max(0.0f, trail-0.01);
    }

	// We use the red channel as the container for the trail value
	vec4 color = vec4(trail, 0.0f, 0.0f, 1.0f); 

	
    float sum = 0;
	float originalCol = trailMap[trailMapIndex];
	// 3x3 blur
	for (int offsetX = -1; offsetX <= 1; offsetX ++) {
		for (int offsetY = -1; offsetY <= 1; offsetY ++) {
			int sampleX = pixelCoords.x + offsetX;
			int sampleY = pixelCoords.y + offsetY;
			sum += trailMap[getIndex(sampleX,sampleY)];
		}
	}

	float blurredCol = sum / 9.0f;
    color = vec4(blurredCol, 0.0f, 0.0f, 1.0f);

    imageStore(screen, pixelCoords, color);

}